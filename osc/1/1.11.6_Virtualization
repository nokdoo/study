virtualization은 os 내의 다른 os로 application을 실행시키는 기술이다.
emulation은 source cpu와 target cpu가 다른 경우에 사용된다.
	-예를 들어 IBM CPU에서 동작하도록 만들어진 application이
	Intel CPU로 구성된 컴퓨터에서 동작하기 위해서는 emulation이 필요하다.
emulation의 개념은 하나의 플랫폼으로 설계된 os가 다른 od를 실행할 수 있도록 한다.

source code가 target code로 변환되어야 하기 때문에 emulation코드는 막대한 비용을 필요로 하며,
source cpu와 target cpu는 같은 성능을 가지고 있기 때문에 emulated code는 native code보다 속도가 느리다.

일반적으로, computer language가 native code로 컴파일될 때가 아닌,
	high-level form또는 intermediate form에서 실행될 때
	emulation이 사용된다.
이는 interpretation으로 알려져 있다.

interpretation은 다른 cpu가 아닌, language가 실행될 수 있는 virtual machine를 emulate함으로써
	high-level language를 native cpu instruction으로 변환시킨다.
java는 항상 java emulator(java virtual machines)에서 interpret된다.

virtualization을 통해 특정 cpu를 위해 설계된 os는 다른 os와 cpu를 실행시킬 수 있다.

(a) - host
	hardware - kernel - programming interface - processes

(b) - guest
	hardware - virtual machine manager(VMM) - vm1 - kernel - programming interface - processes
											- vm2 - kernel - programming interface - processes
											- vm3 - kernel - programming interface - processes
VMware는 VMM의 한 종류


최근 os는 다양한 application을 수용할 수 있지만 virtualization은 필요에 의해 계속 성장중이다.
MAC OS(host)에서 Windows(guest) application을 설치 및 실행 시키는 것이 그 예이다.



