하나의 array가 main memory를 구성하듯이 array는 단순한 자료구조이다.

다양한 크기를 가진 item을 저장하거나, item들의 상대 위치를 보존하면서 item을 제거하는 경우
array는 또 다른 자료구조로 바뀐다.

array가 각 item에 직접 접근할 수 있지만, 
list는 하나의 data values sequence로서 하나의 collection을 지칭한다.
list는 linked list의 형태로 존재하며, 종류로는
	singly linked list
	doubly linked list
	circularly linked list

linked list는 다양한 크기를 가질 수 있으며, item의 삽입, 삭제가 쉽다는 장점이 있지만,
item검색에 O(n)의 비용이 드는 단점이 있다.
그럼에도, list는 stack과 queue와 같은 강력한 자료구조로 흔히 쓰인다.

stack은 Last In First Out을 원칙으로 push와 pop으로 알려진 연산을 사용한다.
이는 OS의 함수호출에도 사용된다.
파라미터, 지역변수, 반환 주소가 스택에 입력되고, 함수를 반환할 때 이들을 제거한다.

	--스택 프레임에 대해 알아보기 
	인터넷은 내용이 다른 부분이 있어서 어떤 것이 맞는 것인지 모르겠음

queue는 First In First Out을 원칙으로 한다.
작업을 프린터에게 보내고 프린터는 작업을 도착 순서대로 인쇄하는 등 많은 예가 존재.
task가 실행되기 위해서 cpu가 여유로워 지길 기다리는 것에도 queue가 사용된다.

