os는 컴퓨터 하드웨어를 관리하고 프로그램을 실행시키는 환경을 제공한다.

프로그램은 실행되기 위해서 main memory에 있어야 한다.
main memory는 프로세서가 직접 접근할 수 있는 유일한 저장공간이다.
대부분의 컴퓨터에는 secondary-storage가 프로그램이나 데이터를 저장함으로써  main memory를 보완한다.

컴퓨터 시스템의 storage system은 속도와 비용에 따라 계층형 구도를 형성할 수 있다.

컴퓨터를 설계하는 전략의 종류
	single-processor system, multiprocessor system
	multiprocessor는 두개 이상의 프로세스가 물리적인 메모리와 주변장치를 공유한다.
	multiprocessor는 일반적으로 대칭구조를 이룬 형태를 이루며 서로가 독립적으로 감시, 실행을 한다.
	= symmetric multiprocessing (SMP)

	clustered system - lan을 통해 다수의 컴퓨터로 구성된 multiprocessor

cpu를 가장 잘 활용하는 방법은 동시에 메모리 안에 있는 작업을 수행하는 것이다.
time-sharing system은 빠른 스위치를 통해 동시에 사용되는 것처럼 cpu를 사용할 수 있다.

사용자 프로그램으로부터 적절한 작업이 방해되는 것을 막기 위해서 os는 user mode, kernel mode를 지원한다.

프로세스는 os내의 작업의 기본 단위이다.
프로세스 관리는 프로세스의 각각의 통신과 동기화릘 위해서 생성, 삭제, 메커니즘을 제공한다.

os는 사용되고 있는 메모리와 그것을 소유하는 부분을 지속적으로 감시함으로써 메모리를 관리한다.
	alloc, free 등
파일구조, 대용량 장치, 공간관리 등 storage system 도 os에 의해 관리된다.

protection measure은 유저 또는 프로세스의 이용 가능한 자원으로의 접근을 제어한다.
security measure은 외부 또는 내부의 공격으로부터 컴퓨터를 보호한다.

리스트, 스택, 큐, 트리, 해시 함수, 맵, 비트맵 등의 자료구조가 다양한 곳에 사용된다.

전통적인 컴퓨팅 시스템은 하나의 컴퓨터 네트워크에 접속했다.
분산시스템은 컴퓨터 네트워크에 접속된 여러 호스트의 자원을 공유한다.
서비스 모델은 client-server model, peer-to-peer model이 있다.
가상화는 컴퓨터의 하드웨어를 여러 실행환경으로 추상화하는 것을 말한다.
클라우딩은 분산시스템을 사용하여 서비스 모델을 클라우드로 추상화 시키는 것을 말한다.
실시간 시스템은 로봇이나 특정 기기에 기반한 임베디드 시스템으로 설계된다.

free software는 수 많은 오픈소스 프로젝트를 만들어 왔다.
프로그램을 직접 수정하고 테스트하고 도움을 구하고오류를 수정하는 등의 경험을 할 수 있다.


