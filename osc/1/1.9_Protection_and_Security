컴퓨터 시스템이 다수의 사용자를 가지고 있고 동시에 많은 프로세스를 실행하도록 허용한다면,
	데이터에 대한 접근의 통제가 필요하다.
이를 위해서 mechanism은 파일, memory-segment, cpu 등의 자원들이 os로부터 권한을 받은 프로세스에 의해
operate되는 것을 보장해야한다.
ex)
	- 메모리 주소를 지정하는 HW는 프로세스가 자신의 주소 공간에서 실행되도록 보장
	- 타이머는 제어권 반납없이는 프로세스가 cpu를 제어할 수 없음을 보장
	- 장치제어관리는 사용자에 접근할 수 없고 이를 통해 여러 장치들의 무결성을 보호할 수 있음

protection이란 프로세스와 사용자가 컴퓨터 시스템에 의해 정의된 자원에 접근하는 것을 제어하는 장치이다.
component subsystem간의 interface에서 잠재적 error를 감지하는 것은 protection의 신뢰성을 향상시킨다

파일, 메모리에 대한 protection이 있어도 외부나 내부의 공격에 의해 데이터가 복제되거나 삭제될 수 있다.
이를 막는 것을 security라고 한다

protection과 security는 사용자를 구별할 수 있는 시스템을 필요로 한다. - ID
사용자를 개별적으로 관리하기보다는 집단으로 관리하기 위해 GROUP을 사용한다.
하나의 사용자는 여러 GROUP에 참여할 수 있다.

사용자는 때로 추가 권한을 얻고 싶어한다.
이를 위해서 OS는 많은 방법을 제공하고, UNIX를 예로 들면,
	프로그램의 setuid속성을 이용해서 프로그램이 현재 사용자가 아닌 파일이 소유하고 있는 사용자를 통해
	실행하게끔 한다.

