설계가 완성되면 구현을 시작해야 한다.
os는 많은 사람들에 의해 쓰여진, 프로그램들로 구성되어 있기에 일반화시키기 어렵다.

os는 여러 프로그래밍 언어를 통해 만들어진다.

고수준 언어로 os를 구현하는 것은 application을 개발하는 것과 같은 이점을 가지고 있다.
컴파일 기술을 향상은 간단한 재컴파일을 통해 전체 os의 코드를 향상시킨다.
결과적으로 고수준 언어로 작성된 os는 하드웨어에 관계없이 쉽게 이동(port)할 수 있다.

반대로 고수준 언어로 작성된 os는 속도가 감소하고 요구되는 저장소의 크기가 증가한다.
오늘날 이것들은 중요한 이슈가 되지 않는다.
숙련된 어셈블리 프로그래머보다 정교하고 최적화된 compiler가 좋은 코드를 생산한다.

os의 성능향상은 훌륭한 어셈블리 코드보다 더 나은 자료구조와 알고리즘의 결과일 수 있다.

시스템이 올바르게 작성되고 작동한다면 병목현상은 식별될 수 있고 동등한 어셈블리 언어로 교체될 수 있다.

