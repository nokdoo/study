System Program은 프로그램 개발과 실행 환경을 위해 편의를 제공하는 System utility로도 알려져 있다.
사용자와 system call 간의 인터페이스를 담당하는 것도 그 중의 일부이다.

System program은 다음의 항목들로 나뉘어질 수 있다.

	* File management - 파일과 디렉토리의 생성, 삭제, 복사, 이름변경, 출력, dump, 나열, 조작을 담당한다.
	* Status information - 날짜나 시간, 시스템의 자원 정보를 얻는 간단한 프로그램부터
		로깅, 디버깅과 같은 복잡한 기능을 제공한다. 
		일반적으로 이 항목의 프로그램은 사용자가 원하는 형식의 출력이 가능하다.
		일부 시스템은 registry를 사용하여 정보를 저장하고 불러온다.
	* File modification - 디스크나 device에 저장된 파일의 내용을 변경하거나 탐색한다.
	* Programming-language support - 컴파일러, 어셈블러, 디버거, 인터프리터
	* Program loading and execution - 어셈블되거나 컴파일된 프로그램은 실행되기 위해서 메모리에 
		load되어야 한다.
		시스템은 absolute loader, relocatable loader, linkage editor, overlay loader를 제공한다.
		디버깅 시스템 또한 필요하다.
	* Communications - 사용자, 프로세스, 시스템간의 가상 연결을 생성하는 메커니즘을 제공한다.
	* Background services - 모든 시스템에는 부팅하는 동안 system-program process를 실행하는 
		method를 가지고 있다. 어떤 프로그램은 작업을 수행하고 종료하는 반면
		다른 프로그램은 또 다른 프로그램이 종료될 때까지 작업을 수행한다.
		실행중인 system-program은 service, subsystem, daemon으로 알려져 있다.
		service의 예로는 네트워크 서비스, 시스템 에러 감지 서비스, 프린터 서버, 스케쥴링 등이 있다.
		kernel단이 아닌 사용자단에서 실행되는 activity는 데몬을 사용한 것이다.

사용자가 볼 수 있는 os의 모습은 system call에 의한 것보다는 application과 system program에 의한 것이다.

하나의 하드웨어에서 다른 인터페이스를 가지고 있더라도 system program은
동일한 system call, resource를 사용한다.

