#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

#define A 0
#define C 1
#define G 2
#define T 3

int cntt = 0;

long long check(char *s, long long n, long long minlen, long long remain, long long cnt[4]){
	long long i, j, k;
	long long tmplen;
	long long cnt2[4];

	//printf("%d\n", ++cntt);
	for(i=0; i+minlen-1<n; i++){
		for(k=0; k<4; k++){
			cnt2[k] = cnt[k];
		}
		tmplen = remain;
		for(j=i; j<i+minlen; j++){
			switch(s[j]){
				case 'A':
					if(cnt2[A] > 0){
						tmplen--;
						cnt2[A]--;               
					}
					break;
				case 'C':
					if(cnt2[C] > 0){
						tmplen--;
						cnt2[C]--;  
					}
					break;
				case 'G':
					if(cnt2[G] > 0){
						tmplen--;
						cnt2[G]--;
					}
					break;
				case 'T':
					if(cnt2[T] > 0){
						tmplen--;
						cnt2[T]--;      
					}
					break;
			}

		}
		if(tmplen == 0){
			return minlen;
		}
	}

	return 0;
}

int main() {

	long long cnt[4] = {0};
	long long n;
	scanf("%lld", &n);
	char *s = (char *) malloc(sizeof(char)*(n+1));
	scanf("%s", s);
	long long i;
	for(i=0; i<n; i++){
		switch(s[i]){
			case 'A':
				cnt[A]++;
				break;
			case 'C':
				cnt[C]++;
				break;
			case 'G':
				cnt[G]++;
				break;
			case 'T':
				cnt[T]++;
				break;
		}
	}
	long long minlen = 0;
	for(i=0; i<4; i++){
		cnt[i] -= n/4;
		if(cnt[i] > 0)
			minlen += cnt[i];
	}

	long long rst;
	long long remain = minlen;
	if(minlen>0){
		while((rst=check(s, n, minlen++, remain, cnt))==0)
			;
	}
	printf("%lld", rst);

}
