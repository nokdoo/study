# jsp파일에 대한 최초의 요청이 들어오면, 서버는 이 jsp파일의 인스턴스를 한 번 생성하고 이후에 같은 요청이 들어오면 생성되어 있는 인스턴스에 스레드 단위로 요청하게 된다.

# 서블릿 - 입출력이 request/response형식으로 이루어진 클래스. 인터페이스를 구현해서 작성해야 한다.
	
# http 프로토콜 - 요청시작(url) - 헤더(시간, 서버정보, 브라우저 종류 등) - body(요청과 응답의 내용)로 이루어진 프로토콜

# 웹서버의 구성 - 
	http서버 - url을 통해 요청-응답간 매칭을 이루는 역할
	웹컨테이너 - http서버로 전송된 url이 서블릿 클래스, jsp를 요청하는 경우 이를 처리하는 역할, 처리된 결과는 다시 http서버로 전송되고 사용자에게 전송된다. 원래는 서블릿 컨테이너, jsp 컨테이너는 다른 것이지만, 통칭하는 경우가 많다. 톰캣, 웹로직 등이 있다.

# 서블릿의 동작 원리
	*사용자의 url요청 - 사용자의 url요청으로 deployment descriptor(web.xml)에 매핑되어 있는 서블릿 클래스를 찾는다. 사용자의 요청이 서블릿 요청이라는 것을 알기 위해서는 deployment descriptor가 필요하다.
	*req, res객체 생성
	*서블릿 인스턴스와 스레드 생성 - 웹컨테이너에서 서블릿 클래스가 실행된 적 없거나 인스턴스가 없다면 인스턴스를 생성하고 init()메소드를 실행하여 초기화한 뒤 스레드를 생성한다. 인스턴스가 이미 존재한다면 기존의 인스턴스에 스레드를 하나 추가한다. 각 서블릿 인스턴스는 웹컨테이너에 하나만 존재하므로, init()은 한 번만 호출된다.
	*service()메소드 호출과 서블릿 클래스 실행 - 스레드가 생성되면 각 스레드에서 service()메소드가 호출괸다. 그리고 doGet(req,res), doPost(req,res)가 호출되는데, 이곳이 개발자가 페이지를 생성하기 위한 작업영역이다.
	*응답과 스레드의 소멸 - http로 res객체를 전달하면 스레드는 소멸한다.


# web.xml
	어떤 url요청이 서블릿 요청인지, 해당 서블릿 요청이 사용하는 서블릿 클래스는 어떤 것인지 알려주는 파일.

# jasper
	톰캣의 jsp engine이다. jsp파일을 서블릿으로 컴파일하기 위해 실행된다.
